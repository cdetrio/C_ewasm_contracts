(module
  (type (;0;) (func (param i32 i32 i32)))
  (type (;1;) (func (param i32 i32)))
  (type (;2;) (func))
  (import "env" "callDataCopy" (func $callDataCopy (type 0)))
  (import "env" "mul256" (func $mul256 (type 0)))
  (import "env" "finish" (func $finish (type 1)))
  (func $_main (type 2)
    (local i32)
    i32.const 1024
    i32.const 4
    i32.const 32
    call $callDataCopy
    i32.const 1056
    i32.const 36
    i32.const 32
    call $callDataCopy
    i32.const 100000
    local.set 0
    loop  ;; label = @1
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      i32.const 1056
      i32.const 1024
      i32.const 1088
      call $mul256
      i32.const 1056
      i32.const 1088
      i32.const 1024
      call $mul256
      local.get 0
      i32.const -1
      i32.add
      local.tee 0
      br_if 0 (;@1;)
    end
    i32.const 1024
    i32.const 32
    call $finish)
  (table (;0;) 1 1 funcref)
  (memory (;0;) 2)
  (global (;0;) (mut i32) (i32.const 66656))
  (global (;1;) i32 (i32.const 66656))
  (global (;2;) i32 (i32.const 1120))
  (export "memory" (memory 0))
  (export "__heap_base" (global 1))
  (export "__data_end" (global 2))
  (export "_main" (func $_main))
  (data (;0;) (i32.const 1024) "\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00\00"))
